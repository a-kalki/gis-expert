--- НАЧАЛО HEADER ---

# Добро пожаловать в мир IT

Здесь становятся программистами!

--- НАЧАЛО ВКЛАДКИ: О курсах ---

# Введение

### Сайт

Любые успешные курсы состоят из нескольких составляющих:

1. программа обучения;

2. организация обучения;

3. личные качества преподавателя.

Эта страница подробно раскрывает все три пункта. Здесь ты найдешь информацию об организации обучения, а с программой сможешь ознакомиться на вкладках "TypeScript" или "Python".

Ключевым фактором успеха я считаю партнерство ментора и студента. Поэтому, прежде чем мы начнем, важно познакомиться. Это можно сделать на вкладке "Обо мне".

Наверное не лишним будет ознакомиться с реальными историями программистов во вкладке "Отзывы".

Информация о том как записаться на курсы или связаться с нами дана во вкладке "Контакты".

Как создавался сайт? Идите в "Закулисье").

### Отношения

Читая дальше можешь обратить внимание, что я обращаюсь на ты. Это сделано намеренно, так как одна из задач курсов является: обучение командному взаимодействию.

А в команде принято обращаться на ты, невзирая на должности.
    Конечно же, если команда придерживается плоской структуры и agile подхода.

Да, ты наверняка не знаешь что такое плоская структура и agile. Но как видишь, на курсах ты научишься больше, чем просто программированию!

Моя главная цель — подготовить тебя к реальной работе в IT. Основной упор мы сделаем на командное взаимодействие, так как это самый частый и востребованный сценарий на рынке. Однако навыки эффективной коммуникации и совместной работы будут не менее полезны и на фрилансе, где нужно будет общаться с клиентами или со мной как с наставником на проектах.

## О курсах

Называю это курсами, потому что так понятнее, но это скорее менторство. Наша цель — обучиться не ради бумаги или сертификата, а ради настоящих навыков и опыта работы.

### Направление: веб-разработка

Конечная цель нашего обучения — дать тебе навыки для создания сложных и масштабных приложений, которые работают в интернете и на телефоне (PWA). Примеры таких систем — Озон или Kaspi. Этот путь для настоящих героев кода, готовых пройти его до конца.

Но есть и более короткая дорога к первым деньгам. Не обязательно проходить весь путь до конца, чтобы начать зарабатывать. Уже после первого модуля ты сможешь брать небольшие проекты и решать реальные бизнес-задачи, о чем мы подробнее расскажем ниже.

### Стек

Нужно выбрать один из языков:

* Python — универсальный и востребованный язык. Я преподаю его, потому что есть материалы и спрос.

* JavaScript/TypeScript (JS/TS) — наш основной язык. На нём мы делаем фронт и бэк. Отлично для старта и веб-разработки.

Если не знаешь какую выбрать, то рекомендую начать с js/ts. На мой взгляд он открывает больше дверей (возможностей), в том числе возможность вместе работать.

### Модули курсов

Курсы состоят из трех модулей (этапов):

1. Стать программистом — синтаксис, первый код, Git и GitHub, а также изучение решения реальных бизнес-проблем, основанных на скриптах.  
        Основная цель: стать программистом, научиться переводить задачи с человеческого языка на код и решать скриптовые бизнес-задачи.  
        Срок: 3–4 месяца.
        Описания терминов:
        
          Синтаксис: правила написания кода, которые позволяют компьютеру понимать команды программиста.
          Git и GitHub: инструменты для сохранения и обмена кодом, отслеживания изменений и совместной работы.
          Скрипт: небольшой автономный фрагмент кода, решающий одну конкретную задачу, без сложной архитектуры и долгосрочной поддержки.

* Синтаксис: правила написания кода, которые позволяют компьютеру понимать команды программиста.

* Git и GitHub: инструменты для сохранения и обмена кодом, отслеживания изменений и совместной работы.

* Скрипт: небольшой автономный фрагмент кода, решающий одну конкретную задачу, без сложной архитектуры и долгосрочной поддержки.

2. Личный проект — создаем наше первое настоящее приложение. Учимся выстраивать домен (логику) и интерфейс, то есть изучаем архитектуру программ.  
        Основная цель: сделать личное приложение и столкнуться с реальными сложностями программиста — структурой, архитектурой и повторным использованием кода.  
        Срок: 2–3 месяца.
        Описания терминов:
        
          Приложение: программа, объединяющая внутреннюю логику и интерфейс для решения нескольких задач пользователя (например, игра или трекер привычек).
          Домен: основная логика программы — то, что описывает предметную область и правила работы приложения.
          Интерфейс: часть программы, через которую пользователь взаимодействует с логикой (например, кнопки, формы, меню).
          Архитектура: структура кода, определяющая, как логика и интерфейс связаны между собой и взаимодействуют.

* Приложение: программа, объединяющая внутреннюю логику и интерфейс для решения нескольких задач пользователя (например, игра или трекер привычек).

* Домен: основная логика программы — то, что описывает предметную область и правила работы приложения.

* Интерфейс: часть программы, через которую пользователь взаимодействует с логикой (например, кнопки, формы, меню).

* Архитектура: структура кода, определяющая, как логика и интерфейс связаны между собой и взаимодействуют.

3. Командная разработка — создаём реальное клиент-серверное веб-приложение как команда, как в настоящей IT-компании.  
        Основная цель: получить опыт разработки веб-приложений и совместной работы с распределением ролей.  
        Срок: 4–6 месяцев.
        Описания терминов:
        
          Веб-приложение: приложение работающее через интернет, где клиент и сервер взаимодействуют между собой и пользователями.
          Клиент: часть приложения, которая работает в браузере и отображает интерфейс пользователю (фронтенд).
          Сервер: часть приложения, которая обрабатывает запросы, управляет данными и отвечает клиентам (бэкенд).

* Веб-приложение: приложение работающее через интернет, где клиент и сервер взаимодействуют между собой и пользователями.

* Клиент: часть приложения, которая работает в браузере и отображает интерфейс пользователю (фронтенд).

* Сервер: часть приложения, которая обрабатывает запросы, управляет данными и отвечает клиентам (бэкенд).

Общий срок обучения: 9–13 месяцев.

Вполне возможно что на третьем модуле будем делать уже реальный коммерческий проект.

## Дорожная карта: выбери свой путь

> no-code, low-code — это технологии, которые позволяют автоматизировать бизнес-процессы и интегрировать сервисы без глубоких знаний программирования или вовсе без написания кода.

Первый модуль даст тебе прочный фундамент. После него ты сможешь выбрать, куда двигаться дальше:

### 🚀 Быстрый старт: Автоматизация и фриланс

Этот путь для тех, кто хочет как можно скорее начать решать реальные задачи и зарабатывать используя now-code, low-code. Ты научишься:

* Автоматизировать работу с Google Sheets, Forms, Drive.

* Писать Telegram-ботов и парсеры для сбора данных.

* Интегрировать сервисы с помощью платформ вроде n8n.

* Достаточно первого модуля, чтобы брать первые заказы.

### 💻 Путь героя: Профессиональная разработка

Этот путь для тех, кто готов идти до конца, чтобы создавать сложные продукты и работать в команде. Ты будешь:

* Создавать масштабные приложения с нуля.

* Работать в IT-компаниях или над крупными проектами.

* Развиваться как full-stack разработчик.

* Осваиваешь все три модуля для серьезной карьеры в IT.

Какой бы путь ты ни выбрал, первый модуль — это твоя основа. Он откроет тебе двери либо в быструю автоматизацию, либо в большое путешествие по миру профессиональной разработки.

## Как мы учимся

Я ментор, а не преподаватель «разжевывающий всё до последней буквы». 80–90% знаний ты будешь осваивать сам, но основу буду давать я. Обещаю много практики.

Я ускоряю твой путь, помогаю на сложных участках и развиваю командное взаимодействие.

### Формат обучения

Офлайн, прямой контакт и взаимодействие студента и ментора.

Онлайн, возможен. В зависимости от спроса.

### Обязательства сторон

На время обучения: я обязываюсь быть ментором, ты студентом со всеми вытекающими обязательствами.

После обучения: мы можем вместе работать над коммерческими проектами, или же вы можете пойти своим путем.

### Условия

Что ты должен иметь и чего я тебе не могу дать.

* достаточное количество мотивации учиться (больше => лучше)

* иметь свободное время, более 2 часов в день (больше => лучше)

* для офлайн иметь ноут, для онлайн иметь комп с выходом в инет

## Что ты получишь

Кроме знаний, опыта и навыков, по окончанию каждого модуля ты получишь реальные результаты, которые можно показать работодателю:

* После 1 модуля (Основы программирования) — репозиторий с выполненными скриптами, решающими реальные бизнес-задачи. Это твоя первая коллекция рабочих решений, показывающих понимание логики, синтаксиса и умение использовать Git и GitHub.

* После 2 модуля (Личный проект) — репозиторий с полноценным приложением: личным проектом, отражающим твой уровень владения архитектурой, логикой и интерфейсом.

* После 3 модуля (Командная разработка) — репозиторий с командным веб-приложением, созданным совместно с другими участниками, а также мою письменную рекомендацию, описывающую твой вклад, ответственность и профессиональные качества.

Эти репозитории и рекомендации будут хорошим подспорьем при трудоустройстве — они станут доказательством твоего реального опыта и навыков.

Во многих компаниях письменные рекомендации ценятся гораздо выше сертификатов. Рекомендация описывает тебя, твои навыки и вклад в командную работу. Сертификат это лишь отметка что ты прошел курс.

Как пример: два моих студента устроились в американский стартап именно по письменной рекомендации.

## Обучение бесплатное. Как мы будем зарабатывать?

Обучение на курсах полностью бесплатное и не накладывает на вас никаких финансовых обязательств. Моя цель — вырастить из вас специалистов, с которыми мы сможем вместе работать и зарабатывать.

### Наша модель после обучения:

После того, как вы научитесь уверенно программировать, мы можем начать сотрудничать по одному из двух сценариев:

1. Вы находите проект. Вы можете брать заказы на фрилансе или других площадках. Я помогу вам с технической частью, советом и код-ревью. В этом случае вы можете по желанию поделиться со мной частью дохода в знак благодарности.

2. Я нахожу проект. Я привлекаю вас к работе над коммерческими заказами, которые нахожу сам. В этом случае мы заранее распределяем обязанности и справедливо делим доход от проекта.

Важно: вы не обязаны работать со мной после курсов. Вы можете пойти своим путем, и я буду только рад вашим успехам. Главное — научиться кодить, чем мы и займемся.

## Две стороны медали

### Минусы моих курсов

* Интенсивность — придётся реально работать и быть вовлечённым. Без практики результата не будет.

* Нет официального сертификата — это менторская программа, а не формальное обучение с документами.

### Плюсы моих курсов

* IT — это твоё? — уже на первом уроке помогу определить, подходит ли тебе программирование. Возможно, сэкономлю тебе месяцы времени и тысячи тенге.

* Менторская поддержка — я лично сопровождаю на сложных этапах, направляю и подсказываю, как действовать дальше.

* Короткий путь к результату — менторство экономит время: ты получаешь нужные знания в 2–3 раза быстрее, чем при самостоятельном обучении.

* Реальная практика — мы делаем не учебные задания, а настоящие мини-проекты, которые решают конкретные задачи бизнеса.

* Репозитории работ — после каждого модуля у тебя остаются реальные проекты в GitHub, то есть собственное портфолио.

* Рекомендация для работодателей — после третьего модуля получишь мою письменную рекомендацию с описанием твоих профессиональных качеств.

* Бесплатное обучение — ты получаешь знания и опыт без оплаты. Я инвестирую время и силы, рассчитывая на возможное сотрудничество в будущем.

* Партнёрство — после курса ты можешь присоединиться к моим проектам или я могу помогать делать твои проекты (в начале пути). Мне выгодно, чтобы ты стал сильным специалистом.

* Без обязательств — никаких условий или контрактов. Даже если после обучения ты пойдёшь своим путём — это нормально.

## Как попасть на следующие курсы?

А ты знал, что задача программиста — думать алгоритмически? Это значит, что любую человеческую задачу нужно уметь переводить в алгоритм.

> Алгоритм — это последовательность высокоуровневых шагов для достижения конечной цели.

Давайте начнём изучать программирование уже сейчас!

### Набор на курсы: алгоритм

Задача: Набрать команду на следующий курс и запуститься.

1. Ты: заполняешь анкету (на вкладке "Контакты").

2. Мы: Если ("желающих с одинаковыми предпочтениями" >= 5), то:
        
          Запускаем курс.

1. Запускаем курс.

3. Иначе:
        
          Ждём следующего участника.

1. Ждём следующего участника.

### Алгоритм и жизнь

В жизни всё несколько сложнее. Если строго следовать этому алгоритму, то мы вполне можем никогда не запустить ни один курс.

Этим и отличаются люди от программ. Мы гибки. Мы всегда можем найти компромисс: некоторые студенты могут изменить свои предпочтения, а мы можем начать курс и с меньшим количеством участников. С людьми зачастую интереснее работать. И сложнее. Гораздо сложнее...

### Выставляем оценки

Если ты прочитал этот раздел и тебе понятно, что здесь написано, то, вполне возможно, в тебе сидит потенциал будущего программиста.

Что с этим делать? Выбор за тобой...

--- НАЧАЛО ВКЛАДКИ: Обо мне ---

## Привет. Я Нурболат

Я не люблю пафосные продающие тексты. Люблю говорить просто, как есть.

Хочешь научиться программировать — добро пожаловать.

Прочитав, ты поймёшь вкратце мой опыт, почему я учу и как могу помочь тебе стать разработчиком.

## Немного о себе

Программировать я начал ещё в 2000 году. Тогда работал топографом и использовал скрипты в AutoCAD, чтобы ускорять работу и делать чертежи быстрее.

В 2017 году решил полностью перейти в IT. Изучил Python, HTML, CSS, JS, собрал команду из новичков и мы начали строить свои стартапы. Четыре проекта — и ни один не стал «суперуспешным». Но опыт, который мы получили, бесценен.

Параллельно я работал со студентами: сначала неудачно, потом всё стало получаться. Некоторые мои ученики уже работают за границей, некоторые в крупных компаниях в Казахстане. Это доказывает, что фундамент, который я даю, реально работает.

Работать и зарабатывать в крупных IT компаниях легче. Моя бывшая команда уже зарабатывает далеко больше 1 млн. тенге в месяц. А мне больше нравится развивать стартапы и работать со студентами, поэтому я развиваю коворкинг-мастерскую и курсы программирования.

## Личное знакомство

Хочешь увидеть меня не только как ментора, но и как человека? Посмотри этот рилс — там я рассказываю о своём подходе к обучению.

[рилс](https://www.instagram.com/reel/DOf7MwmDGKg/?igsh=NnhwaHBqazZqNjhh)

P.S. Не обращай внимание на метку об оплате в видео — изначально я планировал платные курсы, но позже пересмотрел модель в пользу бесплатного обучения с перспективой совместных проектов.

## Мои цели

### Цель 1. Курсы программирования

Почему я это делаю:

* хочу делиться опытом;

* люблю работать со студентами;

* хочу развивать IT в своем регионе;

* взращиваю новую команду;

* зарабатывать на совместных коммерческих проектах с выпускниками.

### Цель 2. Бизнес по аутсорс-разработке

Мы запускаем бизнес для аутсорс-проектов, т.е. разрабатывать приложения для действующих бизнесов.
    Планируем расширяться. Выпускники курсов могут присоединиться к нам, если готовы (только для стека TypeScript).

### Цель 3. Коворкинг мастерская

Ну и как я говорил, развиваю свой стартап: Коворкинг мастерская "Дедок". Если Когда он станет успешным, будем масштабировать ее и понадобится написать приложение. Так что вполне возможно, что мы станем участниками одной продуктовой команды.

Не знаешь что такое продуктовая команда? Приходи ко мне на занятия, как раз на первом уроке я рассказываю, какие бывают "уровни" программиста и что означает быть участником "продуктовой команды".

--- НАЧАЛО ВКЛАДКИ: Отзывы ---

## Отзывы

Все
      Студенты
      Команда

### Азат

Студент

Привет, меня зовут Азат, я из Уральска. С детства увлекался разработкой: начинал с Pawn, делал серверы для CS 1.6 и GTA SA-MP, позже перешёл на JavaScript и веб.

В колледже я прошёл курсы у Нурболата — мы разобрали основы, алгоритмы, паттерны, и даже сделали командный проект. После курсов мне удалось устроиться в американский стартап ZenGuard, где я занимался разработкой, тестированием, деплоем и работой с AI.

Сейчас я работаю AI-разработчиком в Freedom Broker. Курсы Нурболата стали для меня отличной базой и помогли уверенно начать карьеру.

Мой профиль в linkedin

[linkedin](https://www.linkedin.com/in/%D0%B0%D0%B7%D0%B0%D1%82-%D0%BA%D1%83%D0%B0%D0%BD-7ab63037a?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app)

### Асет Кадыржанов

Команда

Я, Асет Кадыржанов, Senior Frontend-разработчик.

В IT пришёл в 2020 году. Начинал как самоучка, но искал возможность войти в сферу. Тогда я познакомился с Нурболатом, который дал мне шанс попробовать себя в разработке на Angular. Этот опыт стал для меня отличной отправной точкой.

За время карьеры я успел поработать в четырёх компаниях, включая моё текущее место работы — Alatau City Bank (ex Jusan Bank), а также в десяти стартапах. Сейчас моя основная ответственность в банке связана с продуктами кредитования. Я участвую в полном цикле разработки: от проектирования архитектуры до внедрения новых фич, работы с Angular (версии 19-20), CI/CD, релиз-менеджментом и инфраструктурой на AWS.

Мой доход составляет около 5000 долларов в месяц (с учётом part-time проектов). Меня можно найти в LinkedIn под именем Asset Kadyrzhanov.

[Asset Kadyrzhanov](https://www.linkedin.com/in/asset-kadyrzhanov)

В завершение хочу отметить, что курсы Нурболата я настоятельно рекомендую. Мне довелось работать с ним напрямую и видеть, как он обучает студентов. Многие из них благодаря его подходу добились весомых результатов в IT.

### Ренат

Студент

Я, Сагынгалиев Ренат, разработчик с опытом работы в веб-разработке и специализацией на Angular и TypeScript.

В IT я пришёл, как и многие, с мечтой — зарабатывать хорошие деньги, сидя за компьютером. Но чем глубже я начал изучать программирование, тем сильнее понимал: IT — это не только про деньги, а про огромный мир, где всегда есть что изучать, что улучшать и куда расти.

Начинал я с курсов JavaScript у Нурболата. Там всё объяснялось максимально чётко и доступно. Самое ценное для меня было общение с ментором: он всегда подсказывал, где можно улучшить код и как двигаться дальше. Благодаря этому обучение стало не просто теорией, а настоящим практическим опытом.

Сейчас работаю в Mobile Protection, должность: Frontend-разработчик (Angular). В мои обязанности входит:  Разработка и поддержка веб-приложений на Angular. Оклад: 400 000 тенге.

* Мой GitLab: riko321riko321

[riko321riko321](https://gitlab.com/riko321riko321)

### Дамир

Студент

Привет, меня зовут Дамир, я из Уральска. С детства увлекался разработкой: пробовал делать игры на Unreal Engine, а позже начал создавать сайты и проекты в университете.

Во время практики я пришёл к Нурболату — мы разбирали алгоритмы, паттерны и делали командный проект. Это дало мне хороший фундамент для старта.

Сейчас я работаю Full Stack-разработчиком и продолжаю развиваться в этой сфере. Опыт в команде стал для меня отличным стартом, чтобы уверенно строить карьеру в IT.

### Артем

Команда

Всем привет! Я Артем. Занимаюсь разработкой на typescript(javascript).

Раньше занимался дизайном, но со временем начал понимать, что дизайн это не мое и я хочу заниматься чем то другим.
Параллельно с дизайном я начал изучать верстку, потом фронтенд, бэкенд и в итоге сейчас я в fullstack разработке.

Мне повезло попасть в компанию к Нурболату. Там я получил опыт взаимодействия с командой.
А так же получил опыт в реальном применении знаний архитектуры и написания кода. Все это очень помогло в дальнейших поисках работы.

Я благодарен Нурболату за опыт полученный под его руководством.
С уверенностью могу сказать что, Нурболат даст хорошие и полезные знания, которые пригодятся в дальнейшей работе.

### Юрий

Команда

После окончания университета по профилю "Программирование" я искал своё первое место работы. И тут я встретил предложение о работе от Нурболата: у него была идея запуска стартапа и требовались программисты, и я пошёл к нему работать.
По ходу программной разработки стартапа разобрался в море теории, которую потом применяли на практике. Сначала писали приложение на Python, а потом перешли на JS + TS. В ходе горячих командных обсуждений способов реализации программы лучше понимали теорию и совместо выбирали какое-то решение.

Сейчас я работаю в компании X-Keeper full-stack программистом (nodejs + angular), и в рамках команды выполняю роль tech-lead: написание кода, проектирование фич, обсуждение вариантов реализации, обсуждение бизнес-задач, код-ревью и т.д. А ведь к Нурболату я пришёл совсем "джуном".

Я благодарен Нурболату, что он организовал место, где действительно можно получить и улучшить знания по программированию. Очень углубленный подход. Знаю, советую, рекомендую.

Если вы не знаете с чего начать, или не знаете ваше ли это дело - программирование, или даже если вы разбираетесь в основах, но какой-то целостной картины о программировании сложить не получается - обращайтесь к Нурболату. Он сделает из вас программиста (при условии, что вы будете усердно стараться и не лениться (ну или почти не лениться!)).

Ссылка на мой github: https://github.com/fx-it

[https://github.com/fx-it](https://github.com/fx-it)

### Кенесары

Команда

Мой первый серьёзный опыт в IT я получил у Нурболата — именно там я впервые попробовал себя в роли full stack-разработчика. Мы работали командой, разбирали архитектуру, делали реальные проекты, и это стало отличным фундаментом для моего дальнейшего роста.

После этого я продолжил путь и устроился в американский стартап, где также занимался full stack-разработкой. Этот этап помог мне закрепить навыки и лучше понять, как выстраиваются процессы разработки в распределённой команде.

Сейчас я работаю Senior Frontend-разработчиком в Alatau City Bank. В моей зоне ответственности — разработка и поддержка крупных приложений на Angular, проектирование новых фич, оптимизация и участие в релизах.

Я благодарен Нурболату за тот первый шанс и практический опыт, который он дал. Это помогло мне уверенно войти в профессию и построить карьеру в IT.

### Нурадил

Студент

Привет читателям отзывов) Меня зовут Нурадил и мне доводилось побывать студентом у Нурболата. С него начался мой путь настоящего бизнесового программирования.

Он научил меня основам программирования, командный работе, как делается командная разработка в платформе Github, разным архитектурам и паттернами проектирования и ООП. Мне даже удалось поработать с ними для разработки совместного проекта.

После этого я смог устроится на международную компания ZenGuard AI там я работал над разработкой Guardrails системы для AI и приложений на их основе.

Сейчас опять же работаю Software Engineer-ом в зарубежной компаний который называется Logical Health. И вместе со мной работает такие великие люди) которые работали в Google, Meta.

Если не верите вот мой linkedin:)

[linkedin:)](https://kz.linkedin.com/in/nuradil-maksut)

--- НАЧАЛО ВКЛАДКИ: TypeScript ---

### Модуль 1: "Основы программирования на JavaScript"

1. Введение в JavaScript и как он связан с TypeScript. Их место в IT.

2. Базовые элементы JavaScript.

3. Работа с данными: строки и числа.

4. Управление версиями с Git и GitHub.

5. Структуры данных: массивы и объекты.

6. Логика и ветвление.

7. Логические операторы и приведение типов.

8. Циклы и итерации.

9. Функции — строительные блоки программы.

10. Функции: мастер-класс.

11. Функции: продвинутые концепции.

12. Начинаем практику по алгоритмике. Тесты.

13. HTML: Структура и семантика.

14. DOM: Базовые манипуляции.

15. События и обработчики в DOM.

16. Модули, области видимости.

17. Консольконо и браузерное мини-приложение.

18. Продвинутые концепции: промисы и асинхронность.

19. Обработка ошибок.

20. Работа с данными: regex, json, файлы.

21. Практика....

22. Практика....

23. Практика....

* На каждом уроке я (ментор) буду разбирать практические случаи на живых примерах для усвоения темы.

* Ты будешь делать как терминальные, так и UI-задачи при выполнении заданий.

* Будешь делать практические задания через тестирование.

* Код-ревью и взаимная проверка заданий станет твоей регулярной практикой.

Фундамент, который ты получишь, — это не просто теория. Это ключ к решению реальных задач. Уже после этого этапа ты сможешь:

* Автоматизировать рутину: Писать скрипты для работы с Google Sheets, Docs и Drive, чтобы избавить себя или клиентов от монотонной работы.

* Создавать чат-ботов: Разработать простого Telegram-бота, который сможет отвечать на команды или присылать уведомления.

* Собирать данные с сайтов (парсинг): Написать программу, которая будет собирать нужную информацию с веб-страниц.

* Интегрировать сервисы: Использовать платформы вроде n8n для связки разных приложений и автоматизации бизнес-процессов.

* Создавать простые веб-интерфейсы: Верстать и оживлять несложные сайты и формы.

Эти навыки — твой первый шаг к выполнению реальных заказов и заработку на фрилансе.

1. Ты изучишь и освоишь синтаксис JavaScript и научишься уверенно писать код на нем.

2. Узнаешь, какие среды выполнения есть для JS и научишься выполнять в них свой код.

3. Освоишь азбуку программирования:
        
          основные компоненты кода (переменная, типы данных, логические операторы и прочее);
          основные блоки кода (ветвление, циклы, функции);
          читать и понимать ход выполнения кода, в том числе чужого.

* основные компоненты кода (переменная, типы данных, логические операторы и прочее);

* основные блоки кода (ветвление, циклы, функции);

* читать и понимать ход выполнения кода, в том числе чужого.

4. Получишь практический опыт решения алгоритмических задач через тестирование.

5. Получишь практический опыт решения практических задач через терминальные и веб-интерфейсы взаимодействия.

6. Научишься работать с Git и GitHub.

7. Освоишь навыки командного взаимодействия и освоишь код-ревью.

8. Будешь готов к переходу на более сложные концепции программирования.

Все навыки начиная со третьего пункта действительны для любого языка программирования. Так что второй и последующий язык дастся тебе намного легче. Это как научиться водить автомобиль, другой автомобиль хоть и отличается, но концептуально это тот же автомобиль.

### Итог:

Ты научишься думать как программист и понимать код так, как его понимает компьютер.

### Модуль 2: "Объектно-ориентированное программирование на TypeScript"

Скоро будет!

### Модуль 3: "Командная разработка веб-приложения на TypeScript"

Скоро будет!

--- НАЧАЛО ВКЛАДКИ: Python ---

### Модуль 1: "Основы программирования на Python"

1. Введение в Python и мир IT

2. Базовые элементы Python

3. Работа с данными: Числа и Строки, Списки

4. Введение в контроль версий с Git и GitHub.

5. Коллекции данных и типизация: кортежи, множества, словари

6. Логика и ветвление

7. Циклы и итерации в Python

8. Функции — строительные блоки программы

9. Модули, области видимости и отладка

10. Мастер-класс: Функции и отладка

11. Готовимся к практике, мастер-класс по практике и тестированию

12. Продвинутые концепции: Докстрока, Колбэк, Лямбда

13. Продвинутые концепции: Рекурсия, Замыкание

14. Продвинутые концепции: Генераторы и Декораторы

15. Ассинхронность, ввод-вывод, файлы

16. Работа с данными: RegEx, Дата, try

17. Делаем консольную программу

18. практика...

19. практика...

20. практика...

* В каждом уроке, я (ментор) буду разбирать практические случаи на живых примерах.

* Как правило в каждом уроке есть практические или домашние задания.

* Начиная с 11 урока, подключишься к решению практических задач через тестирование. Практика и теория с этого момента будут идти параллельно.

* Буду с самого начала учить тебя читать чужой код. Этот навык очень ценится при трудоустройстве.

Фундамент, который ты получишь, — это не просто теория. Это ключ к решению реальных задач. Уже после этого этапа ты сможешь:

* Автоматизировать рутину: Писать скрипты для работы с Google Sheets, Docs и Drive, чтобы избавить себя или клиентов от монотонной работы.

* Создавать чат-ботов: Разработать простого Telegram-бота, который сможет отвечать на команды или присылать уведомления.

* Собирать данные с сайтов (парсинг): Написать программу, которая будет собирать нужную информацию с веб-страниц.

* Интегрировать сервисы: Использовать платформы вроде n8n для связки разных приложений и автоматизации бизнес-процессов.

* Создавать простые веб-интерфейсы: Верстать и оживлять несложные сайты и формы.

Эти навыки — твой первый шаг к выполнению реальных заказов и заработку на фрилансе.

1. Изучишь и освоишь синтаксис Python. Будете довольно уверенно писать код на этом языке.

2. Изучишь азбуку программирования:
        
          основные компоненты кода (переменная, типы данных, логические операторы и прочее)
          основные блоки кода (ветвление, циклы, функции)
          читать и понимать ход выполнения кода, в том числе чужого

* основные компоненты кода (переменная, типы данных, логические операторы и прочее)

* основные блоки кода (ветвление, циклы, функции)

* читать и понимать ход выполнения кода, в том числе чужого

3. Богатый практический опыт решения алгоритмических задач

4. Изучишь Git, GitHub. Любой программист должен уверенно работать этими инструментами.

5. Получишь начальный уровень командного взаимодействия. Узнаешь, что такое код-ревью и начнёшь его практиковать.

6. Будешь готов к переходу на более сложные концепции программирования.

Все навыки начиная со второго пункта действительны для любого языка программирования. Так что второй и последующий язык дастся тебе намного легче. Это как научиться водить автомобиль, другой автомобиль хоть и отличается, но концептуально это тот же автомобиль.

Научишься думать как программист и понимать написанный код так, как его будет понимать компьютер.

### Модуль 2: "Объектно-ориентированное программирование на Python"

Скоро будет!

### Модуль 3: "Командная разработка веб-приложения на Python"

Скоро будет!

--- НАЧАЛО ВКЛАДКИ: Контакты ---

## Анкета

Если хочешь попробовать наши курсы (конечно пробуй!), то нужно заполнить анкету определившись с ответами на вопросы:

1. Какой язык программирования меня интересует (python или js+ts)?

2. Какой формат обучения меня интересует (офлайн или онлайн)?

3. Какие дни недели обучения мне удобны?

4. Какое время обучения мне удобно?

Знаешь ответы? Смело переходи по ссылке и заполняй анкету!

[анкету](/form)

## Связь

Хочешь знать какие курсы запускаются?

У нас есть группа в телеграм. Когда будет набираться команда и запускаться курс, то мы сообщим об этом там. Присоединяйся.

Тут же можно задавать вопросы. Особенно общие, которые могут быть интересны другим. И даже совместно решать программистские задачи).

Ссылка: Urlask It Courses

[Urlask It Courses](https://t.me/uralsk_it_courses)

## Контакты

Если у тебя возникли вопросы и хочешь обсудить лично, можешь связаться с нами, и я обязательно отвечу:

* Тел: +7 777 287 8182

* Telegram: https://t.me/anzUralsk

[https://t.me/anzUralsk](https://t.me/anzUralsk)

--- НАЧАЛО ВКЛАДКИ: Закулисье ---

## Закулисье

Бывшие коллеги и студенты просмотрели этот сайт и сказали, что он «скучный», «много букв» и «похож на документ». Они считают, что сайт — это лицо нашей работы, и по нему будут судить о нашей профпригодности.

Не буду спорить. Они правы.

Но мне этот сайт нравится. Он минималистичен, возможно, даже слишком. Моё оправдание? Я больше программист, чем дизайнер или маркетолог.

Я следую принципам, близким каждому разработчику, например, Дзену Python:

* Красивое лучше, чем уродливое.

* Явное лучше, чем неявное.

* Простое лучше, чем сложное.

* Читаемость имеет значение.

Эти правила универсальны. В IT, как правило, чем проще, тем лучше. Я старался сделать этот сайт максимально простым, понятным и красивым, чтобы он был по-настоящему эффективным.

И если вы читаете эти строки, значит, моя цель достигнута — здесь есть что-то, что вас зацепило ;-).

--- НАЧАЛО FOOTER ---

© 2025 Все права принадлежат Нурболату :-).