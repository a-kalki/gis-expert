import { cwd } from 'process';
import { join } from 'path';
import { Db } from '@app/db';

function showHelp() {
  console.log(`
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bun run db-utils/run-migrations.ts [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --force            –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π (–æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
  --status           –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
  --rollback         –û—Ç–∫–∞—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–≥—Ä–∞—Ü–∏—é (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
  --migration <–∏–º—è>  –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é
  --help             –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  bun run db-utils/run-migrations.ts --status      # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
  bun run db-utils/run-migrations.ts --force       # –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
  bun run db-utils/run-migrations.ts --force --migration=002_remove_promocode.ts  # –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è
  bun run db-utils/run-migrations.ts --rollback    # –û—Ç–∫–∞—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–≥—Ä–∞—Ü–∏—é
  `);
}

async function main() {
  const projectDir = cwd();
  const dbPath = join(projectDir, 'course.sqlite');

  const args = process.argv.slice(2);
  if (args.includes('--help')) {
    showHelp();
    return; // –í—ã–π—Ç–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏
  }

  const forceRun = args.includes('--force');
  const specificMigration = args.find(arg => arg.startsWith('--migration='))?.split('=')[1];
  const rollback = args.includes('--rollback');
  const status = args.includes('--status');

  // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π –±–µ–∑ --force
  if (!forceRun && !status && !rollback) {
    console.error('‚ùå –û–®–ò–ë–ö–ê: –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π —Ç—Ä–µ–±—É–µ—Ç —Ñ–ª–∞–≥–∞ --force');
    console.error('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: bun run db-utils/run-migrations.ts --force');
    console.error('   –ò–ª–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: bun run db-utils/run-migrations.ts --status');
    console.error('   –î–ª—è —Å–ø—Ä–∞–≤–∫–∏: bun run db-utils/run-migrations.ts --help');
    process.exit(1);
  }

  console.log(`üöÄ –ó–∞–ø—É—Å–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏—è–º–∏`);
  console.log(`üìç –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${dbPath}`);
  console.log(`üìç –û–∫—Ä—É–∂–µ–Ω–∏–µ: ${process.env.NODE_ENV || 'development'}`);

  try {
    const db = new Db(dbPath);

    if (status) {
      // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
      const migrationStatus = db.getMigrationStatus();
      console.log('üìä –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:');
      console.log(`‚úÖ –ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ: ${migrationStatus.applied.length}`);
      console.log(`‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ: ${migrationStatus.pending.length}`);
      migrationStatus.applied.forEach((m: string) => console.log(`   ‚úì ${m}`));
      migrationStatus.pending.forEach((m: string) => console.log(`   ‚óã ${m}`));
      return;
    }

    if (rollback) {
      // –û—Ç–∫–∞—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–∏–≥—Ä–∞—Ü–∏–∏
      await db.rollbackLastMigration();
      return;
    }

    if (specificMigration) {
      // –ó–∞–ø—É—Å–∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
      console.log(`üéØ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏: ${specificMigration}`);
      await db.runSpecificMigration(specificMigration);
    } else {
      // –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –Ω–µ–ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π
      console.log('üîÑ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –Ω–µ–ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã—Ö –º–∏–≥—Ä–∞—Ü–∏–π...');
      await db.runMigrations('migrations');
    }

    console.log('‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

main();
